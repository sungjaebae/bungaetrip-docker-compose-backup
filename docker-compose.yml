version: '3.9'

services:
  nginx:
    container_name: nginx
    image: nginx:stable-alpine
    volumes:
        - './nginx/default.conf:/etc/nginx/conf.d/default.conf'
        - './nginx/templates:/etc/nginx/templates'
        - ./certbot/conf:/etc/letsencrypt
        - ./certbot/www:/var/www/certbot
    ports:
      - '80:80'
      - '443:443'
    environment:
      - NGINX_HOST=muinjijun.ml
    restart: unless-stopped
    depends_on:
      - authenticationserver.api
    networks:
      - nginx-network

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot

  authenticationserver.api:
    container_name: authserver
    image: ${DOCKER_REGISTRY-}authenticationserverapi
    expose:
      - 80
    build:
      context: .
      dockerfile: AuthenticationServer.API/Dockerfile
    depends_on:
        - mysql
    networks:
      - nginx-network

  taxi.webapi:
    container_name: taxiapi
    image: ${DOCKER_REGISTRY-}taxiwebapi
    build:
      context: .
      dockerfile: taxi.Webapi/Dockerfile
    expose:
      - 80
    depends_on:
        - mysql
    networks:
      - nginx-network

  mysql:
    container_name: mysql
    environment:
        - MYSQL_ROOT_PASSWORD=PiI4I65otC04Ut
        - MYSQL_DATABASE=gogetters
        - MYSQL_USER=admin
        - MYSQL_PASSWORD=PiI4I65otC04Ut
    expose:
      - 3306
    image: 'mysql:8.0.29'
    networks:
      - nginx-network

  react:
    container_name: react
    build:
      context: login_test
      dockerfile: Dockerfile.dev
    expose:
      - 80
    networks:
      - nginx-network
    volumes:
      - /usr/src/app/node_modules
      - './login_test:/usr/src/app'
    stdin_open: true

networks:
  nginx-network:
    driver: bridge