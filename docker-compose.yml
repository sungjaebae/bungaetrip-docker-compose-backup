version: "3.9" #for visual studio
services:
  nginx:
    container_name: nginx
    image: nginx:stable-alpine
    volumes:
      - "./nginx/default.conf:/etc/nginx/conf.d/default.conf"
      - "./nginx/templates:/etc/nginx/templates"
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NGINX_HOST=slowtest.ml
    restart: unless-stopped
    depends_on:
      - authserver
      - springboot
    extra_hosts:
      - "host.docker.internal:host-gateway"

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot

  authserver:
    container_name: authserver
    image: ${DOCKER_REGISTRY-}authenticationserverapi
    #image: ${DOCKER_REGISTRY-}authserver
    build:
      context: .
      dockerfile: AuthenticationServer.API/Dockerfile
      #dockerfile: Authserver/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    expose:
      - 80
    depends_on:
      - mysql
    extra_hosts:
      - "host.docker.internal:host-gateway"

  springboot:
    container_name: springboot
    environment:
      - spring_profiles_active=Development
    expose:
      - 8080
    build:
      context: ApplicationServer
      dockerfile: Dockerfile
    depends_on:
      - mysql
      - authserver
    extra_hosts:
      - "host.docker.internal:host-gateway"

  mysql:
    container_name: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=PiI4I65otC04Ut
      - MYSQL_DATABASE=gogetters
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=PiI4I65otC04Ut
      - LC_ALL=C.UTF-8
    ports:
      - "3306:3306"
    volumes:
      - "./mysql:/var/lib/mysql"
      - "./my.cnf:/etc/mysql/my.cnf"
    image: "mysql:8.0.30-debian"
    command: >
      bash -c "
      chmod 644 /etc/mysql/my.cnf
      && /entrypoint.sh mysqld
      "
