version: "3.4" #for production server(azure VM)
services:
  nginx:
    container_name: nginx
    build:
      context: nginx
      dockerfile: Dockerfile
    volumes:
      - "./nginx/default.conf:/etc/nginx/conf.d/default.conf"
      - "./nginx/templates/nginx.conf.template.production:/etc/nginx/templates/nginx.conf.template"
      - "../bungjaetrip-landing-page/out:/data"
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NGINX_HOST=gogetter.kr
    restart: always
    depends_on:
      - authserver
      - springboot
    extra_hosts:
      - "host.docker.internal:host-gateway"

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot

  authserver:
    container_name: authserver
    image: ${DOCKER_REGISTRY-}authenticationserverapi
    build:
      context: AuthenticationServer.API
      dockerfile: Dockerfile
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
    expose:
      - 80
  springboot:
    container_name: springboot
    environment:
      - spring_profiles_active=prod
    restart: always
    expose:
      - 8080
    build:
      context: ApplicationServer
      dockerfile: Dockerfile
    depends_on:
      - authserver
    entrypoint: sh -c "./wait-for.sh authserver:80 -- java -jar /java.jar"
